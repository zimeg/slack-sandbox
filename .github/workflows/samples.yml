name: Synchronize certain samples

on:
  push:
    paths:
      - 'deno.sdk.begut/**'
      - 'js.bolt.surge/**'
      - 'js.bolt.tails/**'
      - 'py.bolt.snaek/**'
  workflow_dispatch:

jobs:
  synchronize:
    name: Update remote branches
    runs-on: ubuntu-latest
    strategy:
      matrix:
        folder:
          - deno.sdk.begut
          - js.bolt.surge
          - js.bolt.tails
          - py.bolt.snaek
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: sandbox
      - name: Checkout sample repo
        uses: actions/checkout@v4
        with:
          repository: zimeg/slacks
          path: samples
          token: ${{ secrets.SANDBOX_ACCESS_TOKEN }}
      - name: Configure git credentials
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'
      - name: Update ${{ matrix.folder }}
        if: >-
          github.event_name == 'push' && (
          contains(github.event.head_commit.modified, matrix.folder) ||
          contains(github.event.head_commit.added, matrix.folder) ||
          contains(github.event.head_commit.removed, matrix.folder)
          ) || github.event_name == 'workflow_dispatch'
        run: |
          cd samples
          git checkout -b ${{ matrix.folder }} --force
          git rebase main
          rsync -av --delete --exclude=".git" ../sandbox/${{ matrix.folder }}/ .
          git add .
          if [ -z "$COMMIT_MESSAGE" ]; then
            COMMIT_MESSAGE="chore(sync): update sample with the latest upstream changes"
          fi
          git commit -m "$COMMIT_MESSAGE"
          git push origin HEAD
        env:
          COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
