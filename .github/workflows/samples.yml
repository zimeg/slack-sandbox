# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Synchronize certain samples
on:
  push:
  workflow_dispatch:
jobs:
  test:
    name: Confirm sensible changes
    runs-on: ubuntu-latest
    permissions:
      contents: read
    strategy:
      fail-fast: false
      matrix:
        include:
          - app: deno.sdk.begut
            test: deno task test
          - app: deno.sdk.chanl
            test: deno task test
          - app: java.sdk.gibra
            build: gradle clean shadowJar
            test: java -jar build/libs/java.sdk.gibra-all.jar -mode api -method api.test
          - app: js.bolt.surge
            deps: npm install
            test: npm run test
          - app: js.bolt.tails
            deps: npm install
            test: npm run test:ci
          - app: py.bolt.snaek
            test: make test
    defaults:
      run:
        working-directory: ${{ matrix.app }}
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4.2.2
      - name: Install a flaked Nix
        uses: DeterminateSystems/nix-installer-action@v16
      - name: Cache saved flakes
        uses: DeterminateSystems/magic-nix-cache-action@v8
      - name: Install dependencies
        if: ${{ matrix.deps }}
        run: nix develop -c ${{ matrix.deps }}
      - name: Build ${{ matrix.app }}
        if: ${{ matrix.build }}
        run: nix develop -c ${{ matrix.build }}
      - name: Test ${{ matrix.app }}
        if: ${{ matrix.test }}
        run: nix develop -c ${{ matrix.test }}
  synchronize:
    name: Update remote branches
    if: github.ref == 'refs/heads/main'
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        folder:
          - deno.sdk.begut
          - deno.sdk.chanl
          - java.sdk.gibra
          - js.bolt.surge
          - js.bolt.tails
          - py.bolt.snaek
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
          path: sandbox
      - name: Checkout sample repo
        uses: actions/checkout@v4.2.2
        with:
          repository: zimeg/slacks
          path: samples
          token: ${{ secrets.SANDBOX_ACCESS_TOKEN }}
      - name: Configure git credentials
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'
      - name: Update ${{ matrix.folder }}
        run: |
          cd samples
          git checkout --orphan ${{ matrix.folder }}
          rsync -av --delete --exclude=".git" ../sandbox/${{ matrix.folder }}/ .
          rm -f .slack/apps.json
          rm -f .slack/apps.*.json
          cp ../sandbox/LICENSE .
          git add .
          git commit -m "chore(sync): update sample with the latest upstream changes"
          git push -u origin ${{ matrix.folder }} --force
      - name: Send a notification of completion
        uses: slackapi/slack-github-action@v2.0.0
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_GITHUB_ACTION_BOT_TOKEN }}
          payload: |
            channel: ${{ secrets.SLACK_GITHUB_ACTION_CHANNEL_ID }}
            text: "${{ matrix.folder }}(chore): downstream now mirrors changes"
